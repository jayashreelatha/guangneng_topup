接下来给你自己的项目创建一个基本的 Readme 文件吧.
详细操作过程如下:
Global setup:
Download and install Git
git config --global user.name "banxi1988"
git config --global user.email banxi1988@gmail.com
Next steps:
mkdir tasteHibernate
cd tasteHibernate
git init
touch README
git add README
git commit -m 'first commit'
git remote add origin git@github.com:banxi1988/tasteHibernate.git
git push -u origin master
Existing Git Repo?
cd existing_git_repo
git remote add origin git@github.com:banxi1988/tasteHibernate.git
git push -u origin master
Importing a Subversion Repo?
Click here
When you're done:
Continue
banxi1988@banxi:~/github/tasteHibernate$ git init
Initialized empty Git repository in /home/banxi1988/github/tasteHibernate/.git/
banxi1988@banxi:~/github/tasteHibernate$ touch README
banxi1988@banxi:~/github/tasteHibernate$ vi README
banxi1988@banxi:~/github/tasteHibernate$ git add README
banxi1988@banxi:~/github/tasteHibernate$ git commit -m 'first commit'
[master (root-commit) 6ec8aae] first commit
1 files changed, 6 insertions(+), 0 deletions(-)
create mode 100644 README
banxi1988@banxi:~/github/tasteHibernate$ git remote add origin git@github.com:banxi1988/tasteHibernate.git
banxi1988@banxi:~/github/tasteHibernate$ git push origin master
ERROR: banxi1988/tasteHibernate.git doesn't exist. Did you enter it correctly?
fatal: The remote end hung up unexpectedly
banxi1988@banxi:~/github/tasteHibernate$ git push -u origin master
Counting objects: 3, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 383 bytes, done.
Total 3 (delta 0), reused 0 (delta 0)
To git@github.com:banxi1988/tasteHibernate.git
* [new branch]
master -> master
Branch master set up to track remote branch master from origin.
banxi1988@banxi:~/github/tasteHibernate$
关于 Git 的命令请参见 Git 手册.
现在我们已经可以创建了一个库了.创建了一个文件,并且提交了.并且把它推向了 github.
接下来我们将做什么呢?
第三节: Fork A Repo
有些时候你发现自己想要为别人的项目做贡献.或者希望来使用别人的项目做为自己的起点.也就称
之为 Fork.
1. Fork 一个项目. 在你想 fork 的项目的首页.找到 fork 按钮.点击.
2. 接下来设置你本地仓库.
A . 克隆项目.
$ git clone git@github.com:username/projectname.git
B. 远程配置.
当你克隆了一个项目之后.它有一个默认的 remote.叫做.origin.这是指你是在 github 上 fork 的.
而不是在原来的仓库.为了跟踪原本的仓库,你需要添加另一个叫做 upstream 的选项.
3.
$cd projectname
$ git remote add upstream git://github.com/username/projectname.git
$ git fetch upstream
接下来.你要做的就是.
A. 推送提交.
一旦你做出了某些提交到你 fork 的仓库里,你可能想要将其推送到你 fork 的项目去.你要做
就跟平常的项目一样.
4.
$git push origin master
接收 upstream 变更.
如果你 fork 的那个原来的仓库改变了,你可以使用下面的命令来更新你 fork 到本地的仓库.
$ git fetch upstream
$ git merge upstream/master
后面的更多使用指南请参考相关文档.例如创建分支等.
